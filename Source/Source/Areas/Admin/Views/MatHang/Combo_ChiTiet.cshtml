@model DTO.Combo_SanPham
@using DTO;
@using Source.Configuration
@{
    ViewBag.Title = "Combo_ChiTiet";
    List<SanPham_TypeInsertCombo> dsSanPham = ViewBag.dsSanPham;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    int i = 0;
}

<div class="page-content">
    <!-- Panel -->
    <div class="panel">
        <div class="panel-body container-fluid">

            <div class="row row-lg">
                <div class="col-6">
                    <div class="example-wrap">
                        <h4 class="example-title">Tên Combo</h4>
                        <input type="text" class="form-control required" value="@Model.TenCombo" id="TenCombo" placeholder="Nhập tên combo">
                        <input type="hidden" value="@Model.MaCombo" id="MaCombo">
                    </div>
                </div>
                <div class="col-6">
                    <div class="example-wrap">
                        <h4 class="example-title">Đơn giá</h4>
                        <input type="text" class="form-control required currency" onkeyup="formatCurrency(this)" id="DonGia" value="@Model.DonGia" placeholder="Nhập giá combo">
                        <input type="hidden" class="form-control required" id="HinhAnh" value="@Model.HinhAnh">
                    </div>
                </div>
            </div>

            <div class="row row-lg">
                <div class="col-6">
                    <div class="example-wrap">
                        <h4 class="example-title">Hình ảnh</h4>
                        <input type="file"  id="file">
                    </div>
                </div>
                <div class="col-6">
                    <img src=@Url.Content(AppConfig.uploadFolder + @Model.HinhAnh) width='200px' height='200px' id="showImg" style='@if (Model.MaCombo.Equals(0)) { <text>visibility:hidden;</text> } else { <text>visibility:visible ;</text> } ' )>
                </div>
            </div>
            <div class="row row-lg">
                <h4 class="example-title">Danh sách sản phẩm: </h4>
            </div>
            @do
            {
                <div class="row row-lg cb-sp mb-4">
                    <div class="col-7 row">
                        <label class="col-3">Sản phẩm</label>
                        <select class="form-control col-9 MaSanPham">
                            @for (int j=0;j<dsSanPham.Count;j++)
                            {
                                <option @if (Model.sanPham != null && dsSanPham[j].MaSanPham == Model.sanPham[i].MaSanPham)
                                { <text> selected</text>} value='@dsSanPham[j].MaSanPham'>@dsSanPham[j].TenSanPham</option>
                            }
                        </select>
                    </div>
                    <div class="col-4 row">
                        <label class="col-5">Số lượng</label>
                        <input type="number" class="soLuong col-7" @if (Model.sanPham !=null) {<text>value="@Model.sanPham[i].SoLuong"</text> } />
                    </div>


                    <div class="col-2 row">
                          <i class="icon wb-plus-circle" onclick="addForm(this)"></i>
                          <i class="icon wb-minus-circle" onclick="removeForm(this)"></i>
                    </div>
                    </div>
                        i++;
                    } while (Model.sanPham != null && i < Model.sanPham.Count );
                        <button type="button" id="btnSave" class="btn btn-block float-right btn-sm btn-primary waves-effect waves-classic"> Lưu </button>

                            </div>
                        </div>
                        <!-- End Panel -->

                    </div>

<script>
    isUpdate=!!@ViewBag.MaCombo;
    var url_InsertUpdate = '/Admin/Ajax/addOrUpdateCombo';

    const htmlOptions = "@Html.Raw(@ViewBag.selectTag)";
    function removeForm(element) {
        if ($(".cb-sp").length === 1) return;
        $(element).parent().parent().remove();
    }
    function addForm(element) {
        if ($(".cb-sp").length === 5) {
            toastr.error("Số loại sản phẩm trong combo tối đa là 5");
            return;
        }
        const html = `<div class="row row-lg cb-sp mb-4">
                    <div class="col-7 row">
                        <label class="col-3">Sản phẩm</label>
                        <select class="form-control col-9 MaSanPham">
                            ${htmlOptions}
                        </select>
                    </div>
                    <div class="col-4 row">
                        <label class="col-5">Số lượng</label>
                        <input type="number" class="soLuong col-7" />
                    </div>
                    <div class="col-2 row">
                          <i class="icon wb-plus-circle" onclick="addForm(this)"></i>
                          <i class="icon wb-minus-circle" onclick="removeForm(this)"></i>
                    </div>
                    </div>`;
        $(element).parent().parent().after(html);
        $(".MaSanPham").select2();

    }

    $(document).ready(function () {
        $(".MaSanPham").select2();

        $("#btnSave").click(function () {
            const obj = {};
            obj.MaCombo = @ViewBag.MaCombo;
            obj.TenCombo = $("#TenCombo").val();
            obj.DonGia = $("#DonGia").val().split(',').join('');
            obj.HinhAnh = $("#HinhAnh").val();
            obj.sanPham = [];
            if (!file && !obj.HinhAnh) { // file có thể null
                return toastr.error('Vui lòng chọn hình ảnh')
            }
            const check = checkInvalid(obj);

            const lstSp = $(".cb-sp");
            for(let i =0;i<lstSp.length;i++){
                const sp = {};
                sp.MaSanPham = $('.MaSanPham', lstSp[i]).val();
                sp.SoLuong = $('.soLuong', lstSp[i]).val();
                if(sp.SoLuong == '' || sp.SoLuong < 0){
                    $('.soLuong', lstSp[i]).focus();
                    return toastr.error('Số lương sản phẩm không được trống và phải lớn hơn 0');
                }
                obj.sanPham.push(sp);
            }
                
            
            if(check){
                return toastr.error(check.message);
            }

            // gui file
            if (file) {
                const formData = new FormData();
                formData.append('file', file);
                $.ajax({
                    method: 'post',
                    url: '/Admin/Ajax/UploadFile',
                    data: formData,
                    "async": false,
                    "contentType": false,
                    "processData": false
                }).done(result => {
                    if (result.Data.Code == 0) {
                        obj.HinhAnh=result.Data.Message;
                    } else {
                        $("#HinhAnh").val('');
                        toastr.error(result.Data.Message);
                        return false;
                    }
                });
            }
            
            // cap nhat du lieu neu gui file thanh cong
            $.ajax({
                url: url_InsertUpdate, // Md modal
                type: "post",
                data: {
                    obj: obj,
                    isUpdate: isUpdate
                },
            }).done(function (result) {
                if (result.Data.Code == 0) {
                    toastr.success(result.Data.Message);
                    setTimeout(() => {
                        window.location.href = "/Admin/MatHang/Combo";
                    }, 1000);
                    changePage(1);
                } else {
                    toastr.error(result.Data.Message);
                }
            });

        })
    });

    var file=undefined;
    $("#file").change(function (event) {
        $("#showImg").css("visibility", "hidden");
        if (event.target.files) {
            file = event.target.files[0];
            //const allowedExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
            if (!file.type.includes('image')) {
                this.value = '';
                file = undefined;
                toastr.error('Vui lòng chọn file ảnh');
                return;
            }
            if (file.size / 1024 / 1024 >= 8) {
                this.value = '';
                file = undefined;
                toastr.error('Dung lượng file không được vượt quá 8MB')
                return;
            }
            const fd = new FileReader();
            fd.readAsDataURL(file);
            fd.onload = (result) => {
                $("#showImg").attr("src", result.target.result);
                $("#showImg").css("visibility", "visible");
            }
        }
    });

    function checkInvalid(obj){
        
        if(obj.TenCombo === ''){
            $("#TenCombo").focus();
            return {'message':'Tên combo không được trống'};
        } else if(obj.DonGia === ''){
            $("#DonGia").focus();
            return {'message':'Đơn giá không được trống'};
        }
        return false;
    }

</script>